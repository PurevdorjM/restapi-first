const jwt = require('jsonwebtoken');
const asyncHandler = require('./asyncHandler');
const MyError = require('../utils/myError');
const User = require('../models/User');


exports.protect = asyncHandler(async (req, res, next) => {

    let token = null;

    if(req.headers.authorization){
        token = req.headers.authorization.split(' ')[1];
    } else if (req.cookies) {
        token = req.cookies['amazon-token'];
    }

    if(!token){
        throw new MyError('–≠–Ω—ç “Ø–π–ª–¥–ª–∏–π–≥ —Ö–∏–π—Ö—ç–¥ —Ç–∞–Ω—ã —ç—Ä—Ö —Ö“Ø—Ä—ç—Ö–≥“Ø–π –±–∞–π–Ω–∞. üê∞ –¢–∞ —ç—Ö–ª—ç—ç–¥ –ª–æ–≥–∏–Ω —Ö–∏–π–Ω—ç “Ø“Ø!!!. Authorization —ç—Å–≤—ç–ª Cookie –∞—à–∏–≥–ª–∞–Ω —Ç–æ–∫–µ–Ω–æ–æ –¥–∞–º–∂—É—É–ª–Ω–∞ —É—É üöÄ', 401);
    };

    const tokenObj = jwt.verify(token, process.env.JWT_SECRET);

    req.userId = tokenObj.id;
    req.userRole = tokenObj.role;

    next();
});



exports.authorize = (...roles) => {
    return(req, res, next) => {
        if(!roles.includes(req.userRole)){
            throw new MyError('–¢–∞–Ω—ã —ç—Ä—Ö ['+req.userRole+'] —ç–Ω—ç “Ø–π–ª–¥–ª–∏–π–≥ –≥“Ø–π—Ü—ç—Ç–≥—ç—Ö—ç–¥ —Ö“Ø—Ä—ç–ª—Ü—ç—Ö–≥“Ø–π –±–∞–π–Ω–∞üê∞', 403);
        };
        
        next();
    }
}